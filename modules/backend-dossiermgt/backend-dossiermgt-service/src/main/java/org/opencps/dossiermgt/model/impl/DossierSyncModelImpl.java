/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import org.opencps.dossiermgt.model.DossierSync;
import org.opencps.dossiermgt.model.DossierSyncModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DossierSync service. Represents a row in the &quot;opencps_dossiersync&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link DossierSyncModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossierSyncImpl}.
 * </p>
 *
 * @author huymq
 * @see DossierSyncImpl
 * @see DossierSync
 * @see DossierSyncModel
 * @generated
 */
@ProviderType
public class DossierSyncModelImpl extends BaseModelImpl<DossierSync>
	implements DossierSyncModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossier sync model instance should use the {@link DossierSync} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_dossiersync";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "dossierSyncId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierId", Types.BIGINT },
			{ "dossierReferenceUid", Types.VARCHAR },
			{ "createDossier", Types.BOOLEAN },
			{ "method", Types.INTEGER },
			{ "classPK", Types.BIGINT },
			{ "fileReferenceUid", Types.VARCHAR },
			{ "serverNo", Types.VARCHAR },
			{ "payload", Types.VARCHAR },
			{ "retry", Types.INTEGER },
			{ "state_", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierSyncId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dossierReferenceUid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDossier", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("method", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("classPK", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fileReferenceUid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serverNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("payload", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("retry", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("state_", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_dossiersync (uuid_ VARCHAR(75) null,dossierSyncId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,dossierId LONG,dossierReferenceUid VARCHAR(75) null,createDossier BOOLEAN,method INTEGER,classPK LONG,fileReferenceUid VARCHAR(75) null,serverNo VARCHAR(75) null,payload VARCHAR(75) null,retry INTEGER,state_ INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_dossiersync";
	public static final String ORDER_BY_JPQL = " ORDER BY dossierSync.dossierId DESC, dossierSync.method DESC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_dossiersync.dossierId DESC, opencps_dossiersync.method DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.DossierSync"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.DossierSync"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.DossierSync"),
			true);
	public static final long CLASSPK_COLUMN_BITMASK = 1L;
	public static final long COMPANYID_COLUMN_BITMASK = 2L;
	public static final long DOSSIERID_COLUMN_BITMASK = 4L;
	public static final long DOSSIERREFERENCEUID_COLUMN_BITMASK = 8L;
	public static final long FILEREFERENCEUID_COLUMN_BITMASK = 16L;
	public static final long GROUPID_COLUMN_BITMASK = 32L;
	public static final long METHOD_COLUMN_BITMASK = 64L;
	public static final long SERVERNO_COLUMN_BITMASK = 128L;
	public static final long STATE_COLUMN_BITMASK = 256L;
	public static final long UUID_COLUMN_BITMASK = 512L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.DossierSync"));

	public DossierSyncModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierSyncId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierSyncId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierSyncId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DossierSync.class;
	}

	@Override
	public String getModelClassName() {
		return DossierSync.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("dossierSyncId", getDossierSyncId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierId", getDossierId());
		attributes.put("dossierReferenceUid", getDossierReferenceUid());
		attributes.put("createDossier", getCreateDossier());
		attributes.put("method", getMethod());
		attributes.put("classPK", getClassPK());
		attributes.put("fileReferenceUid", getFileReferenceUid());
		attributes.put("serverNo", getServerNo());
		attributes.put("payload", getPayload());
		attributes.put("retry", getRetry());
		attributes.put("state", getState());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long dossierSyncId = (Long)attributes.get("dossierSyncId");

		if (dossierSyncId != null) {
			setDossierSyncId(dossierSyncId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		String dossierReferenceUid = (String)attributes.get(
				"dossierReferenceUid");

		if (dossierReferenceUid != null) {
			setDossierReferenceUid(dossierReferenceUid);
		}

		Boolean createDossier = (Boolean)attributes.get("createDossier");

		if (createDossier != null) {
			setCreateDossier(createDossier);
		}

		Integer method = (Integer)attributes.get("method");

		if (method != null) {
			setMethod(method);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		String fileReferenceUid = (String)attributes.get("fileReferenceUid");

		if (fileReferenceUid != null) {
			setFileReferenceUid(fileReferenceUid);
		}

		String serverNo = (String)attributes.get("serverNo");

		if (serverNo != null) {
			setServerNo(serverNo);
		}

		String payload = (String)attributes.get("payload");

		if (payload != null) {
			setPayload(payload);
		}

		Integer retry = (Integer)attributes.get("retry");

		if (retry != null) {
			setRetry(retry);
		}

		Integer state = (Integer)attributes.get("state");

		if (state != null) {
			setState(state);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getDossierSyncId() {
		return _dossierSyncId;
	}

	@Override
	public void setDossierSyncId(long dossierSyncId) {
		_dossierSyncId = dossierSyncId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_columnBitmask = -1L;

		if (!_setOriginalDossierId) {
			_setOriginalDossierId = true;

			_originalDossierId = _dossierId;
		}

		_dossierId = dossierId;
	}

	public long getOriginalDossierId() {
		return _originalDossierId;
	}

	@Override
	public String getDossierReferenceUid() {
		if (_dossierReferenceUid == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierReferenceUid;
		}
	}

	@Override
	public void setDossierReferenceUid(String dossierReferenceUid) {
		_columnBitmask |= DOSSIERREFERENCEUID_COLUMN_BITMASK;

		if (_originalDossierReferenceUid == null) {
			_originalDossierReferenceUid = _dossierReferenceUid;
		}

		_dossierReferenceUid = dossierReferenceUid;
	}

	public String getOriginalDossierReferenceUid() {
		return GetterUtil.getString(_originalDossierReferenceUid);
	}

	@Override
	public boolean getCreateDossier() {
		return _createDossier;
	}

	@Override
	public boolean isCreateDossier() {
		return _createDossier;
	}

	@Override
	public void setCreateDossier(boolean createDossier) {
		_createDossier = createDossier;
	}

	@Override
	public int getMethod() {
		return _method;
	}

	@Override
	public void setMethod(int method) {
		_columnBitmask = -1L;

		if (!_setOriginalMethod) {
			_setOriginalMethod = true;

			_originalMethod = _method;
		}

		_method = method;
	}

	public int getOriginalMethod() {
		return _originalMethod;
	}

	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@Override
	public String getFileReferenceUid() {
		if (_fileReferenceUid == null) {
			return StringPool.BLANK;
		}
		else {
			return _fileReferenceUid;
		}
	}

	@Override
	public void setFileReferenceUid(String fileReferenceUid) {
		_columnBitmask |= FILEREFERENCEUID_COLUMN_BITMASK;

		if (_originalFileReferenceUid == null) {
			_originalFileReferenceUid = _fileReferenceUid;
		}

		_fileReferenceUid = fileReferenceUid;
	}

	public String getOriginalFileReferenceUid() {
		return GetterUtil.getString(_originalFileReferenceUid);
	}

	@Override
	public String getServerNo() {
		if (_serverNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _serverNo;
		}
	}

	@Override
	public void setServerNo(String serverNo) {
		_columnBitmask |= SERVERNO_COLUMN_BITMASK;

		if (_originalServerNo == null) {
			_originalServerNo = _serverNo;
		}

		_serverNo = serverNo;
	}

	public String getOriginalServerNo() {
		return GetterUtil.getString(_originalServerNo);
	}

	@Override
	public String getPayload() {
		if (_payload == null) {
			return StringPool.BLANK;
		}
		else {
			return _payload;
		}
	}

	@Override
	public void setPayload(String payload) {
		_payload = payload;
	}

	@Override
	public int getRetry() {
		return _retry;
	}

	@Override
	public void setRetry(int retry) {
		_retry = retry;
	}

	@Override
	public int getState() {
		return _state;
	}

	@Override
	public void setState(int state) {
		_columnBitmask |= STATE_COLUMN_BITMASK;

		if (!_setOriginalState) {
			_setOriginalState = true;

			_originalState = _state;
		}

		_state = state;
	}

	public int getOriginalState() {
		return _originalState;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				DossierSync.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DossierSync.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DossierSync toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DossierSync)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossierSyncImpl dossierSyncImpl = new DossierSyncImpl();

		dossierSyncImpl.setUuid(getUuid());
		dossierSyncImpl.setDossierSyncId(getDossierSyncId());
		dossierSyncImpl.setCompanyId(getCompanyId());
		dossierSyncImpl.setGroupId(getGroupId());
		dossierSyncImpl.setUserId(getUserId());
		dossierSyncImpl.setUserName(getUserName());
		dossierSyncImpl.setCreateDate(getCreateDate());
		dossierSyncImpl.setModifiedDate(getModifiedDate());
		dossierSyncImpl.setDossierId(getDossierId());
		dossierSyncImpl.setDossierReferenceUid(getDossierReferenceUid());
		dossierSyncImpl.setCreateDossier(getCreateDossier());
		dossierSyncImpl.setMethod(getMethod());
		dossierSyncImpl.setClassPK(getClassPK());
		dossierSyncImpl.setFileReferenceUid(getFileReferenceUid());
		dossierSyncImpl.setServerNo(getServerNo());
		dossierSyncImpl.setPayload(getPayload());
		dossierSyncImpl.setRetry(getRetry());
		dossierSyncImpl.setState(getState());

		dossierSyncImpl.resetOriginalValues();

		return dossierSyncImpl;
	}

	@Override
	public int compareTo(DossierSync dossierSync) {
		int value = 0;

		if (getDossierId() < dossierSync.getDossierId()) {
			value = -1;
		}
		else if (getDossierId() > dossierSync.getDossierId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		if (getMethod() < dossierSync.getMethod()) {
			value = -1;
		}
		else if (getMethod() > dossierSync.getMethod()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DossierSync)) {
			return false;
		}

		DossierSync dossierSync = (DossierSync)obj;

		long primaryKey = dossierSync.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		DossierSyncModelImpl dossierSyncModelImpl = this;

		dossierSyncModelImpl._originalUuid = dossierSyncModelImpl._uuid;

		dossierSyncModelImpl._originalCompanyId = dossierSyncModelImpl._companyId;

		dossierSyncModelImpl._setOriginalCompanyId = false;

		dossierSyncModelImpl._originalGroupId = dossierSyncModelImpl._groupId;

		dossierSyncModelImpl._setOriginalGroupId = false;

		dossierSyncModelImpl._setModifiedDate = false;

		dossierSyncModelImpl._originalDossierId = dossierSyncModelImpl._dossierId;

		dossierSyncModelImpl._setOriginalDossierId = false;

		dossierSyncModelImpl._originalDossierReferenceUid = dossierSyncModelImpl._dossierReferenceUid;

		dossierSyncModelImpl._originalMethod = dossierSyncModelImpl._method;

		dossierSyncModelImpl._setOriginalMethod = false;

		dossierSyncModelImpl._originalClassPK = dossierSyncModelImpl._classPK;

		dossierSyncModelImpl._setOriginalClassPK = false;

		dossierSyncModelImpl._originalFileReferenceUid = dossierSyncModelImpl._fileReferenceUid;

		dossierSyncModelImpl._originalServerNo = dossierSyncModelImpl._serverNo;

		dossierSyncModelImpl._originalState = dossierSyncModelImpl._state;

		dossierSyncModelImpl._setOriginalState = false;

		dossierSyncModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DossierSync> toCacheModel() {
		DossierSyncCacheModel dossierSyncCacheModel = new DossierSyncCacheModel();

		dossierSyncCacheModel.uuid = getUuid();

		String uuid = dossierSyncCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			dossierSyncCacheModel.uuid = null;
		}

		dossierSyncCacheModel.dossierSyncId = getDossierSyncId();

		dossierSyncCacheModel.companyId = getCompanyId();

		dossierSyncCacheModel.groupId = getGroupId();

		dossierSyncCacheModel.userId = getUserId();

		dossierSyncCacheModel.userName = getUserName();

		String userName = dossierSyncCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			dossierSyncCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			dossierSyncCacheModel.createDate = createDate.getTime();
		}
		else {
			dossierSyncCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dossierSyncCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dossierSyncCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dossierSyncCacheModel.dossierId = getDossierId();

		dossierSyncCacheModel.dossierReferenceUid = getDossierReferenceUid();

		String dossierReferenceUid = dossierSyncCacheModel.dossierReferenceUid;

		if ((dossierReferenceUid != null) &&
				(dossierReferenceUid.length() == 0)) {
			dossierSyncCacheModel.dossierReferenceUid = null;
		}

		dossierSyncCacheModel.createDossier = getCreateDossier();

		dossierSyncCacheModel.method = getMethod();

		dossierSyncCacheModel.classPK = getClassPK();

		dossierSyncCacheModel.fileReferenceUid = getFileReferenceUid();

		String fileReferenceUid = dossierSyncCacheModel.fileReferenceUid;

		if ((fileReferenceUid != null) && (fileReferenceUid.length() == 0)) {
			dossierSyncCacheModel.fileReferenceUid = null;
		}

		dossierSyncCacheModel.serverNo = getServerNo();

		String serverNo = dossierSyncCacheModel.serverNo;

		if ((serverNo != null) && (serverNo.length() == 0)) {
			dossierSyncCacheModel.serverNo = null;
		}

		dossierSyncCacheModel.payload = getPayload();

		String payload = dossierSyncCacheModel.payload;

		if ((payload != null) && (payload.length() == 0)) {
			dossierSyncCacheModel.payload = null;
		}

		dossierSyncCacheModel.retry = getRetry();

		dossierSyncCacheModel.state = getState();

		return dossierSyncCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", dossierSyncId=");
		sb.append(getDossierSyncId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", dossierReferenceUid=");
		sb.append(getDossierReferenceUid());
		sb.append(", createDossier=");
		sb.append(getCreateDossier());
		sb.append(", method=");
		sb.append(getMethod());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", fileReferenceUid=");
		sb.append(getFileReferenceUid());
		sb.append(", serverNo=");
		sb.append(getServerNo());
		sb.append(", payload=");
		sb.append(getPayload());
		sb.append(", retry=");
		sb.append(getRetry());
		sb.append(", state=");
		sb.append(getState());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.DossierSync");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierSyncId</column-name><column-value><![CDATA[");
		sb.append(getDossierSyncId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierReferenceUid</column-name><column-value><![CDATA[");
		sb.append(getDossierReferenceUid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDossier</column-name><column-value><![CDATA[");
		sb.append(getCreateDossier());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>method</column-name><column-value><![CDATA[");
		sb.append(getMethod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileReferenceUid</column-name><column-value><![CDATA[");
		sb.append(getFileReferenceUid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serverNo</column-name><column-value><![CDATA[");
		sb.append(getServerNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>payload</column-name><column-value><![CDATA[");
		sb.append(getPayload());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>retry</column-name><column-value><![CDATA[");
		sb.append(getRetry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>state</column-name><column-value><![CDATA[");
		sb.append(getState());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = DossierSync.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			DossierSync.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _dossierSyncId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _dossierId;
	private long _originalDossierId;
	private boolean _setOriginalDossierId;
	private String _dossierReferenceUid;
	private String _originalDossierReferenceUid;
	private boolean _createDossier;
	private int _method;
	private int _originalMethod;
	private boolean _setOriginalMethod;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private String _fileReferenceUid;
	private String _originalFileReferenceUid;
	private String _serverNo;
	private String _originalServerNo;
	private String _payload;
	private int _retry;
	private int _state;
	private int _originalState;
	private boolean _setOriginalState;
	private long _columnBitmask;
	private DossierSync _escapedModel;
}